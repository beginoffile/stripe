{{template "base" .}}


{{define "title"}}
 login
{{end}}

{{define "content"}}

<div class="row">
    <div class="col-md-6 offset-md-3">

        <div class="alert alert-danger text-center d-none" id="login-messages"></div>

        <form action="" method="post"
        name="login_form" id="login_form"
        class="d-block needs-validation charge-form"
        autocomplete="off" novalidate="">

            <h2 class="mt-2 text-center mb-3">Login Page</h2>
            <hr>


            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="text" class="form-control" id="email" name="email"
                required="" autocomplete="email-new">
            </div>


            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" name="password"
                required="" autocomplete="password-new">
            </div>

            <hr>


            <a href="javascript:void(0)" class="btn btn-primary" onclick="val()">Login</a>

        </form>
    </div>
</div>


{{end}}

{{define "js"}}
<script>

    let loginMessages = document.getElementById("login-messages")

    function showError(msg){
        loginMessages.classList.add("alert-danger");
        loginMessages.classList.remove("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerText = msg;
    }

    function showSuccess(){
        loginMessages.classList.remove("alert-danger");
        loginMessages.classList.add("alert-success");
        loginMessages.classList.remove("d-none");
        loginMessages.innerText = "Login Successful";
    }
        
  
    async function val() {
            this.event.preventDefault();
            this.event.stopPropagation();

            let form = document.getElementById("login_form");
            if (!form.checkValidity()){            
                form.classList.add("was-validated");
                return;
            }
            form.classList.add("was-validated");
            

           

            let payload = {
                email: document.getElementById("email").value,
                password: document.getElementById("password").value,
            }

            const requestOptions = {
                method: 'post',
                headers:{
                    'Accept':'application/json',
                    'Content-Type':'application/json',                    
                },
                body:JSON.stringify(payload),

            }

            try{
                // let response = await fetch("http://localhost:4001/api/payment-intent",requestOptions);            
                let response = await fetch("{{.API}}/api/authenticate", requestOptions);
                let data = await response.json();
                console.log(data)
                // let objData = await JSON.parse(data);
                if (!data.error){
                    localStorage.setItem('token',data.authentication_token.token)
                    localStorage.setItem('token_expiry',data.authentication_token.expiry)
                    showSuccess();
                    location.href = "/";
                }else{
                    showError(data.message);
                }

             
            }
            catch(e){
                console.log(e);
                // showCardError("Invalid response from payment gateway");
                // showPayButtons();
            }
            
          
            
    }

</script>

{{end}}