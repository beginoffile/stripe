{{template "base" .}}


{{define "title"}}
    Admin User
{{end}}


{{define "content"}}
    <h2 class="mt-5">Admin User</h2>
    <hr>
    <form method="post" action="" name="user_form" id="user_form" class="needs_validation" autocomplete="off" novalidate="">
        <div class="mb-3">
            <label for="first_name" class="form_label">First Name</label>
            <input type="text" class="form-control" id="first_name" name="first_name" required="" autocomplete="first_name-new">
        </div>

        <div class="mb-3">
            <label for="last_name" class="form_label">Last Name</label>
            <input type="text" class="form-control" id="last_name" name="last_name" required="" autocomplete="last_name-new">
        </div>

        <div class="mb-3">
            <label for="email" class="form_label">Email</label>
            <input type="email" class="form-control" id="email" name="email" required="" autocomplete="email-new">
        </div>

        <div class="mb-3">
            <label for="password" class="form_label">Password</label>
            <input type="password" class="form-control" id="password" name="password" autocomplete="password-new">
        </div>

        <div class="mb-3">
            <label for="verify-password" class="form_label">Verify Password</label>
            <input type="password" class="form-control" id="verify-password" name="verify-password" autocomplete="verify-password-new">
        </div>

        <hr>
        <div class="float-start">
            <a href="javascript:void(0);" class="btn btn-primary" onclick="val()" id="btnsave">Save Changes</a>
            <a href="/admin/all-users" class="btn btn-warning" id="btncancel">Cancel</a>
        </div>

        <div class="float-end">
            <a href="javascript:void(0);" class="btn btn-danger d-none" id="btndelete">Delete</a>          
        </div>

        <div class="clearfix"></div>

    </form>
    
{{end}}


{{define "js"}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    let token = localStorage.getItem("token")
    let id = window.location.pathname.split("/").pop();
    let delBtn = document.getElementById("btndelete");
    console.log("boton",delBtn);

    val = async ()=>{
        let form = document.getElementById("user_form");
        if (form.checkValidity()===false){
            this.event.preventDefault();
            this.event.stopPropagation();
            form.classList.add("was-validated")
            return
        }
        form.classList.add("was-validated")

        if (document.getElementById("password").value !== document.getElementById("verify-password").value){
            Swat.fire("Password do not match!");
            return
        }

        let payload = {
            id: parseInt(id,10),
            first_name: document.getElementById("first_name").value,
            last_name: document.getElementById("last_name").value,
            email: document.getElementById("email").value,
            password: document.getElementById("password").value,
        }

        const requestOptions = {
            method: 'post',
            headers: {
                'Accept':'application/json',
                'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + token,               
                },
            body: JSON.stringify(payload),
        }

        let response = await fetch('{{.API}}/api/admin/all-users/edit', requestOptions);          
        let data = await response.json();
        console.log("Usuarios",data);
        if (data.error){
            Swal.fire("Error " + data.message);
        }else{
            location.href = "/admin/all-users";
        }


    }

    document.addEventListener("DOMContentLoaded", ()=>{
       
        getUser= async()=>{
            if (id !== "0"){
                if (id !== "{{.UserID}}"){
                    delBtn.classList.remove("d-none");
                }
                

                const requestOptions = {
                method: 'get',
                headers: {
                    'Accept':'application/json',
                    'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + token,               
                    }
                }

                let response = await fetch('{{.API}}/api/admin/all-users/' + id, requestOptions);          
                let data = await response.json();
                console.log("Usuarios",data);
                if (data){
                    document.getElementById("first_name").value = data.first_name;
                    document.getElementById("last_name").value = data.last_name;
                    document.getElementById("email").value = data.email;
                }

            }
            
        }
        getUser();
    })

    delBtn.addEventListener("click", async (e)=>{
        
        let result = await Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to undo this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Delete user'
            });

            console.log("Would delete user id", id);
            
            if (result.isConfirmed) {

                
                let payload = {
                    id: parseInt(id, 10),
                }


                const requestOptions = {
                method: 'post',
                headers: {
                    'Accept':'application/json',
                    'Content-Type': 'application/json',
                        'Authorization': 'Bearer ' + token,               
                    },
                body: JSON.stringify(payload),
                }

                response = await fetch("{{.API}}/api/admin/all-users/delete", requestOptions);                          
                let data = await response.json();      
                console.log(data); 
                if (data.error) {
                    // showError(data.message);
                    Swal.fire("Error: "  + data.message);
                }else{
                    let jsonData = {
                        action: "deleteUser",
                        user_id: parseInt(id,10),
                    }
                    socket.send(JSON.stringify(jsonData));
                    location.href = "/admin/all-users";
                }
            }


         
        }

    )
  
</script>
{{end}}
